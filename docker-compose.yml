version: "3.1"
include:
  - kafka-server.yml

services:
  eureka-service:
    image: hidenxtt2001/social-shop-eureka-service:latest
    ports:
      - 8761:8761
    networks:
      - main

  gateway-service:
    image: hidenxtt2001/social-shop-api-gateway:latest
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-service:8761/eureka/
    ports:
      - 8080:8080
    depends_on:
      eureka-service:
        condition: service_started
    networks:
      - main

  auth-redis:
    image: redis/redis-stack-server:latest
    networks:
      - auth

  auth-database:
    image: mysql:latest
    environment:
      - MYSQL_ROOT_PASSWORD=${DATABASE_PASSWORD_ROOT}
      - MYSQL_USERNAME=${DATABASE_USERNAME_AUTH}
      - MYSQL_PASSWORD=${DATABASE_PASSWORD_AUTH}
    restart: on-failure
    networks:
      - auth
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 10s
      retries: 10

  auth-service:
    image: hidenxtt2001/social-shop-auth-service:latest
    environment:
      - spring.datasource.url=jdbc:mysql://auth-database:3306/auth?allowPublicKeyRetrieval=true&useSSL=false
      - DATASOURCE_USERNAME_AUTH=${DATASOURCE_USERNAME_AUTH}
      - DATASOURCE_PASSWORD_AUTH=${DATASOURCE_PASSWORD_AUTH}
      - eureka.client.serviceUrl.defaultZone=http://eureka-service:8761/eureka/
      - JWT_SIGNING_KEY=${JWT_SIGNING_KEY_AUTH}
      - REDIS_URL=auth-redis
      - REDIS_PORT=6379
    depends_on:
      eureka-service:
        condition: service_started
      gateway-service:
        condition: service_started
      auth-database:
        condition: service_healthy
      auth-redis:
        condition: service_started
    networks:
      - main
      - auth
      - kafka-cluster

  email-service:
    image: hidenxtt2001/social-shop-email-service:latest
    environment:
      - eureka.client.serviceUrl.defaultZone=http://eureka-service:8761/eureka/
    depends_on:
      eureka-service:
        condition: service_started
      gateway-service:
        condition: service_started
    networks:
      - main
      - kafka-cluster

networks:
  main:
  auth:
    driver: bridge









